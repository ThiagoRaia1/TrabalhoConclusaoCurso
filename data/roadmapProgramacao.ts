import { Secao } from "../types/secao";
import { cores } from "../constants/cores";

const secoes: Secao[] = [
  {
    titulo: "üü¢ Fundamentos da Programa√ß√£o (Iniciante)",
    cor: cores.iniciante,
    itens: [
      {
        titulo: "O que √© programa√ß√£o?",
        descricao: `\tProgramar √© dar instru√ß√µes para o computador executar tarefas. 
  \tEssas instru√ß√µes s√£o escritas em linguagens de programa√ß√£o.`,
      },
      {
        titulo: "Vari√°veis e tipos de dados",
        descricao: `\tVari√°veis armazenam valores usados pelo programa.\n
  \tExemplos de tipos:\n
  \t‚Ä¢ Inteiros (int): n√∫meros sem casas decimais\n
  \t‚Ä¢ Reais (float): n√∫meros com casas decimais\n
  \t‚Ä¢ Texto (string): sequ√™ncia de caracteres\n
  \t‚Ä¢ Booleano (bool): verdadeiro ou falso`,
      },
      {
        titulo: "Operadores",
        descricao: `\tUsados para realizar c√°lculos e compara√ß√µes.\n
  \t‚Ä¢ Aritm√©ticos: +, -, *, /, %\n
  \t‚Ä¢ Relacionais: ==, !=, >, <\n
  \t‚Ä¢ L√≥gicos: &&, ||, !`,
      },
      {
        titulo: "Entrada e sa√≠da de dados",
        descricao: `\tEntrada: receber informa√ß√µes do usu√°rio (ex: prompt, input).\n
  \tSa√≠da: mostrar informa√ß√µes (ex: print, console.log).`,
      },
    ],
  },
  {
    titulo: "üü° Estruturas e L√≥gica (Intermedi√°rio)",
    cor: cores.intermediario,
    itens: [
      {
        titulo: "Condicionais",
        descricao: `\tPermitem executar diferentes blocos de c√≥digo com base em condi√ß√µes.\n
  \tExemplo:\n
  \tif (idade >= 18) {\n
  \t\tconsole.log("Maior de idade");\n
  \t} else {\n
  \t\tconsole.log("Menor de idade");\n
  \t}`,
      },
      {
        titulo: "La√ßos de repeti√ß√£o",
        descricao: `\tPermitem repetir um bloco de c√≥digo v√°rias vezes.\n
  \tExemplos:\n
  \t‚Ä¢ for: la√ßo com contador\n
  \t‚Ä¢ while: la√ßo com condi√ß√£o\n
  \t‚Ä¢ do...while: executa pelo menos uma vez`,
      },
      {
        titulo: "Fun√ß√µes",
        descricao: `\tFun√ß√µes agrupam instru√ß√µes reutiliz√°veis.\n
  \tExemplo:\n
  \tfunction somar(a, b) {\n
  \t\treturn a + b;\n
  \t}`,
      },
      {
        titulo: "Listas e vetores",
        descricao: `\tEstruturas que armazenam m√∫ltiplos valores.\n
  \tExemplo em JavaScript:\n
  \tlet numeros = [1, 2, 3, 4];`,
      },
    ],
  },
  {
    titulo: "üîµ Conceitos Avan√ßados (Avan√ßado)",
    cor: cores.avancado,
    itens: [
      {
        titulo: "Programa√ß√£o orientada a objetos (POO)",
        descricao: `\tModelo baseado em objetos e classes.\n
  \tConceitos:\n
  \t‚Ä¢ Classe: molde para criar objetos\n
  \t‚Ä¢ Objeto: inst√¢ncia com atributos e m√©todos\n
  \t‚Ä¢ Heran√ßa, encapsulamento e polimorfismo`,
      },
      {
        titulo: "Recurs√£o",
        descricao: `\tFun√ß√£o que chama a si mesma para resolver um problema.\n
  \t√ötil para algoritmos como fatorial, Fibonacci, etc.`,
      },
      {
        titulo: "Algoritmos e complexidade",
        descricao: `\tEstudo de efici√™ncia de algoritmos.\n
  \t‚Ä¢ Complexidade de tempo (ex: O(n))\n
  \t‚Ä¢ Complexidade de espa√ßo\n
  \tAjuda a escrever c√≥digo mais r√°pido e eficiente.`,
      },
      {
        titulo: "Estruturas de dados",
        descricao: `\tT√©cnicas de organiza√ß√£o de dados:\n
  \t‚Ä¢ Pilha (stack), fila (queue)\n
  \t‚Ä¢ √Årvores, grafos\n
  \t‚Ä¢ Mapas, conjuntos (sets)`,
      },
    ],
  },
];

export default secoes;
